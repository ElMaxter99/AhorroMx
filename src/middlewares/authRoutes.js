const express = require('express');
const { check } = require('express-validator');
const authController = require('../controllers/authController');
const authMiddleware = require('../middlewares/authMiddleware');

const router = express.Router();

// 游늷 Registro de usuario
router.post(
  '/register',
  [
    check('name').notEmpty().withMessage('El nombre es obligatorio.'),
    check('email').isEmail().withMessage('El email no es v치lido.'),
    check('password')
      .isLength({ min: 6 })
      .withMessage('La contrase침a debe tener al menos 6 caracteres.')
  ],
  authController.register
);

// 游늷 Inicio de sesi칩n
router.post(
  '/login',
  [
    check('email').isEmail().withMessage('El email no es v치lido.'),
    check('password').notEmpty().withMessage('La contrase침a es obligatoria.')
  ],
  authController.login
);

// 游늷 Cierre de sesi칩n (El frontend eliminar치 el token)
router.post('/logout', authMiddleware, authController.logout);

// 游늷 Renovaci칩n de token
router.post('/refresh-token', authController.refreshToken);

// 游늷 Recuperaci칩n de contrase침a (env칤o de email)
router.post(
  '/forgot-password',
  [check('email').isEmail().withMessage('El email no es v치lido.')],
  authController.forgotPassword
);

// 游늷 Resetear contrase침a (desde el link del email)
router.post(
  '/reset-password',
  [
    check('token').notEmpty().withMessage('El token es obligatorio.'),
    check('newPassword')
      .isLength({ min: 6 })
      .withMessage('La nueva contrase침a debe tener al menos 6 caracteres.')
  ],
  authController.resetPassword
);

module.exports = router;
